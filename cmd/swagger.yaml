openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
paths:
  /orders:
    get:
      summary: List all orders
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        "400":
          description: Bad request
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        "200":
          description: Order successfully added
        "400":
          description: Bad request
  /orders/{key}:
    get:
      summary: Find an order by hash and sort
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: hash
          in: query
          required: true
          schema:
            type: string
            example: eaef2d69-8b30-4413-9f09-007989d9740c
        - name: sort
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: 2023-09-05T12:00:00Z
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "404":
          description: Order not found
        "400":
          description: Bad request
    put:
      summary: Update an order by hash and sort
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: hash
          in: query
          required: true
          schema:
            type: string
            example: eaef2d69-8b30-4413-9f09-007989d9740c
        - name: sort
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: 2023-09-05T12:00:00Z
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        "200":
          description: Order successfully updated
        "404":
          description: Order not found
        "400":
          description: Bad request
    delete:
      summary: Delete an order by hash and sort
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: hash
          in: query
          required: true
          schema:
            type: string
            example: eaef2d69-8b30-4413-9f09-007989d9740c
        - name: sort
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: 2023-09-05T12:00:00Z
      responses:
        "204":
          description: Order successfully deleted
        "404":
          description: Order not found
        "400":
          description: Bad request
components:
  schemas:
    Input:
      type: object
      properties:
        Name:
          type: string
        Amount:
          type: integer
        Price:
          type: number
        Completed:
          type: boolean
    Order:
      allOf:
        - $ref: '#/components/schemas/Input'
        - type: object
          properties:
            Key:
              type: string
            Created:
              type: string
              format: date-time
            Updated:
              type: string
              format: date-time
